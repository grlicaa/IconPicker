{"version":3,"names":[],"mappings":"","sources":["IPgrid.js"],"sourcesContent":["function IPinit(itemId, opt) {\r\n  var index = 0;\r\n  const item$ = $('#'+itemId);\r\n  const sr$ = item$.addClass('u-vh is-focusable')\r\n\t.parent();\r\n\r\n  \r\n  function render(full, value) {\r\n\tvar p_val = value||\"fa-navicon\";\r\n    const out = apex.util.htmlBuilder();\r\n    out.markup('<div')\r\n      .attr('class', 'ig-div-icon-picker')\r\n      .markup('><button')\r\n\t  .attr('id', itemId+'_lov_btn')\r\n\t  .attr('type', 'button')\r\n\t  .attr('class', 't-Button t-Button--noLabel t-Button--icon ig-ip-render ig-button-icon-picker'+(!opt.showText?' ip-icon-only':''))\r\n\t  .markup('><span')\r\n\t  .attr('class', ' ig-span-icon-picker fa '+p_val)\r\n\t  .attr('aria-hidden', true)\r\n\t  .optionalAttr('disabled', opt.readOnly)\r\n\t  .markup(' /></button><input')\r\n      .attr('type', 'hidden')\r\n\t  .attr('class', 'ig-input-icon-picker')\r\n      .attr('id', itemId+'_'+index+'_0')\r\n      .attr('name', itemId+'_'+index)\r\n      .attr('value', p_val)\r\n      .attr('tabindex', -1)\r\n      .optionalAttr('disabled', opt.readOnly)\r\n      .markup(' /><label')\r\n      .attr('for', itemId+'_'+index+'_0')\r\n      .markup('>')\r\n      .content(opt.showText?p_val:\"\")\r\n      .markup('</label>')\r\n\t  .markup(' </div>');\r\n\r\n    index += 1;\r\n\r\n    return out.toString();\r\n  }\r\n\r\n\tfunction attachButtonclick() {\r\n\t  $('button[id=\"'+itemId+'_lov_btn\"].ig-button-icon-picker').each(function(i, e) {\r\n\t\t$(e).on('click', function(k) {\r\n\t\t\tconst input$ = $(e).parent().find('input.igiconpicker:first');\r\n\t\t\tconst rowId = input$.closest('tr').data('id');\r\n\t\t\tconst regionId = $(input$.parents('.a-IG')).attr('id').slice(0, -3);\r\n\t\t\t $(\"#IconPickerDialogBox\").dialog(\"option\", \"modalItem\", true)\r\n\t\t\t\t\t\t\t\t\t.dialog(\"option\", \"width\", opt.pDWidth)\r\n\t\t\t\t\t\t\t\t\t.dialog(\"option\", \"height\", opt.pDHeight)\r\n\t\t\t\t\t\t\t\t\t.dialog(\"option\", \"title\", opt.pDTitle)\r\n\t\t\t\t\t\t\t\t\t.dialog(\"option\", \"resizable\", opt.pReszie)\r\n\t\t\t\t\t\t\t\t\t.dialog(\"option\", \"tirggElem\", itemId)\r\n\t\t\t\t\t\t\t\t\t.dialog(\"option\", \"showIconLabel\", opt.pIconLabels)\r\n\t\t\t\t\t\t\t\t\t.dialog(\"option\", \"tirggItem\", {regionId:regionId, rowId:rowId, column:itemId})\r\n\t\t\t\t\t\t\t\t\t.html('<main class=\"dm-Body\"><div class=\"dm-Container\"><div class=\"dm-SearchBox\"><label class=\"dm-AccessibleHidden\" for=\"search\">Search</label><div class=\"dm-SearchBox-wrap\"><span class=\"dm-SearchBox-icon fa fa-search\" aria-hidden=\"true\"></span><input id=\"search\" class=\"dm-SearchBox-input\" type=\"search\" placeholder=\"'+opt.pDplaceholder+'\" aria-controls=\"icons\" /></div><div class=\"dm-SearchBox-settings\"><div class=\"dm-RadioPillSet dm-RadioPillSet--large\" role=\"group\" aria-label=\"Icon Size\"><div class=\"dm-RadioPillSet-option\"><input type=\"radio\" id=\"icon_size_small\" name=\"icon_size\" value=\"SMALL\"><label for=\"icon_size_small\">'+opt.pDsmall+'</label></div><div class=\"dm-RadioPillSet-option\"><input type=\"radio\" id=\"icon_size_large\" name=\"icon_size\" value=\"LARGE\"><label for=\"icon_size_large\">'+opt.pDlarge+'</label></div></div></div></div><div id=\"icons\" class=\"dm-Search\" role=\"region\" aria-live=\"polite\"></div></div></main>')\r\n\t\t\t\t\t\t\t\t\t.dialog(\"open\");\r\n\t\t});\r\n\t  });\r\n\t};\r\n\r\n  \r\n  if (!opt.readOnly) {\r\n    attachButtonclick(); \r\n\titem$.closest('.ig-button-icon-picker').prop('disabled', true);\r\n    item$.prop('disabled', true);\r\n  }\r\n\r\n\t \r\n  \r\n  apex.item.create(itemId, {\r\n    setValue:function(value) {\r\n      item$.val(value);\r\n\t  if (value)\r\n\t\t  item$.closest('div.ig-div-icon-picker').find('span.ig-span-icon-picker').attr('class', 'apex-item-icon ig-span-icon-picker fa '+value);\r\n\t  else\r\n\t\t  item$.closest('div.ig-div-icon-picker').find('span.ig-span-icon-picker').attr('class', 'apex-item-icon ig-span-icon-picker fa '+opt.defIcon);  \r\n    },\r\n    disable:function() {\r\n      item$.closest('.ig-div-icon-picker').removeClass('ig-div-icon-picker-enabled');\r\n\t  item$.closest('.ig-div-icon-picker').addClass('ig-div-icon-picker-disabled');\r\n\t  item$.closest('.ig-button-icon-picker').prop('disabled', true);\r\n      item$.prop('disabled', true);\r\n    },\r\n    enable:function() {\r\n      if (!opt.readOnly) {\r\n\t\titem$.closest('.ig-div-icon-picker').removeClass('ig-div-icon-picker-disabled');\r\n\t\titem$.closest('.ig-div-icon-picker').addClass('ig-div-icon-picker-enabled');\r\n\t\titem$.closest('.ig-button-icon-picker').prop('disabled', false);\r\n        item$.prop('disabled', false);\r\n      }\r\n    },\r\n    displayValueFor:function(value) {\r\n      return render(true, value);\r\n    },\r\n  });\r\n}"],"file":"IPgrid.js"}